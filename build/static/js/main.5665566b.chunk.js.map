{"version":3,"sources":["Components/Nav.js","Components/ResumeContext.js","Components/JobSummary.js","Components/SkillsSummary.js","Components/ContactForm.js","Components/Home.js","Components/JobTask.js","Components/Job.js","Components/Skills.js","Components/Education.js","Components/Resume.js","Components/About.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","selector","to","ResumeContext","createContext","ResumeProvider","props","useState","require","resume","setResume","Provider","value","children","JobSummary","useContext","Experience","experience","map","job","index","key","Employer","count","taskCount","Tasks","length","tasks","Object","assign","taskElements","i","randTaskIndex","Math","floor","random","task","push","id","MainTask","j","getRandomTasks","download","href","SkillsSummary","Skills","style","position","post","data","a","url","fetch","method","body","JSON","stringify","headers","response","status","json","res","Error","ContactForm","state","error","submitted","fields","name","email","message","showNotification","type","NotificationManager","success","warning","submitForm","event","preventDefault","target","elements","payload","then","setState","catch","ref","this","formElement","onSubmit","placeholder","rows","columns","Component","Home","icon","faChevronDown","faChevronUp","JobTask","SubTasks","subtask","Job","Role","keyName","divClass","setDivClass","onChange","isVisible","baseClass","skill","Education","entry","University","Degree","GraduationDate","Resume","skills","Name","Address","Phone","keys","About","window","addEventListener","e","console","log","Contact","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5665566b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ScrollTo from 'react-scroll-into-view'\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"color-05\">\r\n            <ScrollTo selector=\"#home\">\r\n                <Link to=\"/\" className=\"color-text-01\">\r\n                    <h3 className=\"home-link\">\r\n                            E\r\n                    </h3>\r\n                </Link>\r\n            </ScrollTo>\r\n            <ul className=\"nav-links\">\r\n            <ScrollTo selector=\"#skills\">\r\n                    <a className=\"color-text-01\">\r\n                        <li>Skills</li>\r\n                    </a>\r\n                </ScrollTo>\r\n            <ScrollTo selector=\"#experience\">\r\n                    <a className=\"color-text-01\">\r\n                        <li>Experience</li>\r\n                    </a>\r\n                </ScrollTo>\r\n                <ScrollTo selector=\"#contact\">\r\n                    <a className=\"color-text-01\">\r\n                        <li>Contact</li>\r\n                    </a>\r\n                </ScrollTo>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { createContext, useState } from 'react';\r\n\r\nexport const ResumeContext = createContext();\r\n\r\nexport const ResumeProvider = props => {\r\n    const [resume, setResume] = useState(require(\"./../Resources/resume.json\"));\r\n    \r\n    return (\r\n        <ResumeContext.Provider value={[resume, setResume]}>\r\n            {props.children}\r\n        </ResumeContext.Provider>\r\n    )\r\n}","import React, {useState, useContext} from 'react';\r\nimport {ResumeContext} from './ResumeContext';\r\n\r\nfunction JobSummary() {\r\n    const [resume, setResume] = useContext(ResumeContext);\r\n    const [experience, setJobExperience] = useState(resume.Experience);\r\n\r\n    const getRandomTasks = function (job, count) {\r\n        //Get a random task from the Employer being shown\r\n        let taskCount = job.Tasks.length;\r\n        let tasks = Object.assign([], job.Tasks);\r\n        let taskElements = [];\r\n\r\n        for (let i = 0; i < count; i++){\r\n            let randTaskIndex = Math.floor(Math.random() * Math.floor(taskCount));\r\n            let task = tasks[randTaskIndex];\r\n            taskElements.push(<li key={\"rand-task-\" + task.id}>{task.MainTask}</li>)\r\n            \r\n            //Move every task after the displayed task up one index\r\n            for (let j = randTaskIndex; j < tasks.length - 1; j++){\r\n                tasks[j] = tasks[j+1];\r\n            }\r\n\r\n            //Delete the last task so we do not have a missing key between two keys\r\n            delete tasks[(taskCount--)];\r\n        }\r\n\r\n        return taskElements;\r\n    };\r\n\r\n    return (\r\n        <div className=\"section-content job-summary-div \">\r\n            <h2 className=\"section-header\">Experience Summary</h2>\r\n            {experience.map((job, index) => (\r\n                <div key={\"job-summary-\" + index}>\r\n                    <h3 className=\"color-text-02\">{job.Employer}</h3>\r\n                    <div>\r\n                        <ul className=\"job-summary-list\">\r\n                            {getRandomTasks(job, 4)}\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                    <a download=\"resume.pdf\" className=\"download-link\" href=\"resume.pdf\"> Click here to download resume</a>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobSummary;","import React from 'react';\r\nimport {ResumeContext} from './ResumeContext';\r\nimport { useContext, useState } from 'react';\r\n\r\nfunction SkillsSummary () {\r\n    const [resume, setResume] = useContext(ResumeContext);\r\n    const [skills, setSkills] = useState(resume.Skills);\r\n    const skillKey = \"Programming Languages\";\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"section-content\">\r\n                <h3 className=\"section-header\">Skills Summary</h3>\r\n                <div className=\"skill-summary-list-container\">\r\n                    <div className=\"skills-columns-container\">\r\n                        <span>\r\n                            <div>\r\n                                <p>\r\n                                    Programming Languages\r\n                                </p>\r\n                                <ul>\r\n                                    <li>jQuery</li>\r\n                                    <li>JavaScript</li>\r\n                                    <li>C#</li>\r\n                                    <li>CSS</li>\r\n                                    <li>HTML</li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <div>\r\n                                <p>\r\n                                    Frameworks & Technologies\r\n                                </p>\r\n                                <ul>\r\n                                    <li>Visual Studio</li>\r\n                                    <li>SVN</li>\r\n                                    <li>GIT</li>\r\n                                    <li>ASP.NET</li>\r\n                                </ul>\r\n                            </div>\r\n                            </span>\r\n                            <span>\r\n                                <div>\r\n                                    <p>\r\n                                        Things I am Learning\r\n                                    </p>\r\n                                    <ul>\r\n                                        <li>React*</li>\r\n                                        <li>AWS</li>\r\n                                        <li>Vue</li>\r\n                                        <li>Angular</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </span>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <span style={{position: 'relative'}}>* Used to build what you're seeing here!</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkillsSummary","//Most of this file was created using instructions/source code from Ashley Mosuro\r\n//https://medium.com/@amosuro/sending-form-data-with-reactjs-nodejs-express-amazon-ses-1a2612e3f6d\r\n\r\nimport React, { Component } from 'react';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n/*\r\n    This helper function allows us to send a post request to a server. \r\n    It takes data as an argument, which is expecting a url property containing the end-point URL to send the request to. \r\n    Notice how after obtaining the url property we delete it, since we don't actually want to send this in the request payload, \r\n    it is simply a way for us to pass the endpoint URL and associated request payload as one argument.\r\n*/\r\nconst post = async (data) => {\r\n    const { url } = data;\r\n    delete data.url;\r\n    \r\n    try {\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (response.status < 200 && response.status >= 300){\r\n            const res = await response.json();\r\n\r\n            throw new Error(res);\r\n        }\r\n\r\n        return response.json();\r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n};\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        error: null,\r\n        submitted: false,\r\n        fields: { name: '', email: '', message: ''}\r\n    };\r\n\r\n    showNotification = (type) => {\r\n        switch(type) {\r\n            case 'success':\r\n                NotificationManager.success('Thank you for your message, and I will get back to you soon.', 'Message Sent!');\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error('Please try again, or refresh.', 'Something Went Wrong');\r\n                break;\r\n            default:\r\n                NotificationManager.warning('Message', 'Title');\r\n                break;\r\n        }\r\n    };\r\n\r\n    submitForm = function (event) {\r\n        event.preventDefault();\r\n        const formElement = event.target;\r\n        const {name, email, message} = formElement.elements;\r\n\r\n        //URL is AWS Restful API URL\r\n        const payload = {\r\n            url: \"https://2g6dka98da.execute-api.us-east-1.amazonaws.com/local\",\r\n            name: name.value,\r\n            email: email.value,\r\n            message: message.value\r\n        };\r\n\r\n        post(payload)\r\n            .then(() => {\r\n                this.setState({error: null, submitted: true});\r\n                this.showNotification('success')\r\n            })\r\n            .catch(error => {\r\n                this.setState({error: error.message, submitted: false});\r\n                this.showNotification('error');\r\n            });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"contact-form section-content color-text-04 no-text-shadow\">\r\n                <h2>Let's Get In Touch</h2>            \r\n                <form ref={this.formElement} \r\n                      onSubmit={(event) => this.submitForm(event)}>\r\n                    <span>\r\n                        <input type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            placeholder=\"Name\"/>\r\n                    </span>\r\n                    <br/>\r\n                    <span>\r\n                        <input type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"/>\r\n                    </span>\r\n                    <br/>\r\n                    <span>\r\n                        <textarea\r\n                            name=\"message\"\r\n                            id=\"message\"\r\n                            placeholder=\"Message\"\r\n                            rows=\"4\"\r\n                            columns=\"50\"/> \r\n                    </span>\r\n                    <br/>\r\n                    <button type=\"submit\" className=\"color-04 color-text-01\">Submit</button>\r\n                </form>\r\n                <NotificationContainer />\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport ScrollTo from 'react-scroll-into-view'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faChevronDown, faChevronUp} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport JobSummary from './JobSummary';\r\nimport SkillsSummary from './SkillsSummary';\r\nimport ContactForm from './ContactForm';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div className=\"container\">\r\n            <section id=\"home\">\r\n                <div className=\"section-div-container color-04 color-text-01\">\r\n                    <div className=\"section-content home-div-header\">\r\n                        <span>\r\n                            <h3 className=\"slide-from-left\">\r\n                                HI\r\n                                <span className=\"color-text-03\">,</span>\r\n                                <br/> \r\n                                I\r\n                                <span className=\"color-text-03\">'</span>\r\n                                M ERIC\r\n                                <span className=\"color-text-03\">.</span>\r\n                            </h3>\r\n                        </span>\r\n                       <span className=\"color-text-01\">\r\n                            <h4 className=\"slide-from-right\">WEB DEVELOPER</h4>\r\n                        </span>\r\n                        <ScrollTo selector=\"#skills\">\r\n                            <span className=\"scroll-span\">\r\n                                <span>View skills</span>                          \r\n                                <span><FontAwesomeIcon icon={faChevronDown} /></span>\r\n                            </span>\r\n                        </ScrollTo>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section id=\"skills\">\r\n                <div className=\"section-div-container skills-container color-04 color-text-01\">\r\n                    <div className=\"skill-summary-background\"/>\r\n                        <SkillsSummary/>\r\n                        <ScrollTo selector=\"#experience\">\r\n                            <span className=\"scroll-span\">\r\n                                <span>View experience</span>                          \r\n                                <span><FontAwesomeIcon icon={faChevronDown} /></span>\r\n                            </span>\r\n                        </ScrollTo>\r\n                </div>\r\n            </section>\r\n            <section id=\"experience\">\r\n                <div className=\"section-div-container color-04 color-text-01\">\r\n                    <div className='job-summary-background'/>\r\n                    <JobSummary/>\r\n                    <ScrollTo selector=\"#contact\">\r\n                        <span className=\"scroll-span\">\r\n                            <span>Contact me</span>                          \r\n                            <span><FontAwesomeIcon icon={faChevronDown} /></span>\r\n                        </span>\r\n                    </ScrollTo>\r\n                </div>\r\n            </section>\r\n            <section id=\"contact\">\r\n                <div className=\"section-div-container color-02\">\r\n                    <div className=\"contact-form-background\"/>\r\n                    <ContactForm/>\r\n                    <ScrollTo selector=\"#home\" className=\"center color-text-04\">\r\n                        <span className=\"scroll-span no-text-shadow\">\r\n                            <span><FontAwesomeIcon icon={faChevronUp} /></span>\r\n                            <span>Back to top</span> \r\n                        </span>\r\n                    </ScrollTo>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction JobTask(task) {\r\n    const index = task.index;\r\n    return (\r\n        <li className=\"resume-list-item\">\r\n            {task.MainTask}\r\n            <ul>\r\n                {(task.SubTasks).map((subtask, index) => (\r\n                    <li key={\"job-subtask-\" + index} className=\"resume-list-item\">{subtask}</li>\r\n                ))}\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default JobTask;","import React from 'react';\r\n\r\nimport JobTask from './JobTask'\r\n\r\nfunction Job (job) {\r\n    return (\r\n        <div>\r\n            <h4>{job.Employer}</h4>\r\n            <h4>{job.Role}</h4>\r\n            <div>\r\n                <ul className=\"resume-list\">\r\n                    {(job.Tasks).map((task, index) => (\r\n                        <div key={\"job-task-\" + index}>\r\n                            <JobTask {...task} index={index} />\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n            </div>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Job;","import React, {useState} from 'react';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\nfunction Skills(props) {\r\n    const keyName = props.keyName;\r\n    const baseClass = \"skills-div\";\r\n    const animateClass = \"skills-div-animate\";\r\n\r\n    const [divClass, setDivClass] = useState(\"skills-div\");\r\n\r\n    var animateSkills = function (isVisible) {\r\n        setDivClass(isVisible ? baseClass + \" \" + animateClass : baseClass);\r\n    };\r\n\r\n    return (\r\n        <VisibilitySensor onChange={animateSkills} children>\r\n            <div className={divClass}>\r\n                <h4>{keyName}</h4>\r\n                <ul className=\"resume-list resume-list-center\">\r\n                    {(props[keyName]).map((skill, index) => (\r\n                        <li key={index} className=\"resume-list-item\">{skill}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </VisibilitySensor>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\n\r\nfunction Education (entry) {\r\n    return (\r\n        <div>\r\n            <h4>{entry.University}</h4>\r\n            <p>\r\n                {entry.Degree} - {entry.GraduationDate}\r\n            </p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;","import React, {useState, useContext} from 'react';\r\n\r\nimport Job from './Job';\r\nimport Skills from './Skills';\r\nimport Education from './Education';\r\nimport {ResumeContext} from './ResumeContext';\r\n\r\n//Get the contents of /Resources/resume.json\r\n\r\nfunction Resume() {\r\n    const [resume, setResume] = useContext(ResumeContext);\r\n    const [experience, setExperience] = useState(resume.Experience);\r\n    const [skills, setSkills] = useState(resume.Skills);\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"contact-info-div\">\r\n                <p>{resume.Name}</p>\r\n                <p>{resume.Address}</p>\r\n                <p>{resume.Phone} </p>\r\n            </div>\r\n            <div>\r\n                <h3>Education</h3>\r\n                <Education {...resume.Education}/>\r\n            </div>\r\n            <div>\r\n                <h3>Work Experience</h3>\r\n                {experience.map((job, index) => (\r\n                    <div key={\"job-\" + index}>\r\n                        <Job {...job} index={index}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>        \r\n                <div>\r\n                    {(Object.keys(skills)).map((keyName, index) => (\r\n                        <div key={\"skills-\" + index}>\r\n                            <Skills keyName={keyName} {...(skills)}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\n\r\nimport Resume from './Resume';\r\n\r\nfunction About() { \r\n    window.addEventListener('scroll', function (e) {\r\n        console.log(e);\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <section className=\"no-scroll-snap\">\r\n                <h3>\r\n                    About Page\r\n                </h3>\r\n                <div>\r\n                    <Resume/>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport ContactForm from './ContactForm';\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"center\">\r\n            <ContactForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport './App.css';\n\n//Created Components\nimport Nav from './Components/Nav';\nimport Home from './Components/Home';\nimport About from './Components/About';\nimport Contact from './Components/Contact';\nimport {ResumeProvider} from './Components/ResumeContext';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <ResumeProvider>\n        <div className=\"App\">\n          <Nav/>\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </div>\n      </ResumeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}